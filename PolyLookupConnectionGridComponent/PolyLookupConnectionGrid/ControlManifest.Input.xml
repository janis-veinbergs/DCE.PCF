<?xml version="1.0" encoding="utf-8" ?>
<manifest>
  <control namespace="DCEPCF" constructor="PolyLookupConnectionGrid" version="1.0.0" display-name-key="PolyLookupConnectionGrid" description-key="Multi-select lookup supporting multi-lookup interface using connections as N-N relationship. Uses grid as datasource" control-type="standard" >
    <!--external-service-usage node declares whether this 3rd party PCF control is using external service or not, if yes, this control will be considered as premium and please also add the external domain it is using.
    If it is not using any external service, please set the enabled="false" and DO NOT add any domain below. The "enabled" will be false by default.
    Example1:
      <external-service-usage enabled="true">
        <domain>www.Microsoft.com</domain>
      </external-service-usage>
    Example2:
      <external-service-usage enabled="false">
      </external-service-usage>
    -->
    <external-service-usage enabled="false">
      <!--UNCOMMENT TO ADD EXTERNAL DOMAINS
      <domain></domain>
      <domain></domain>
      -->
    </external-service-usage>
    <data-set name="records" display-name-key="Records_Dataset_Display" cds-data-set-options="displayCommandBar:true;displayViewSelector:true;displayQuickFind:true" />
    <!-- property node identifies a specific, configurable piece of data that the control expects from CDS -->
    <property name="lookupView" display-name-key="Lookup View" description-key="The view name for the suggestion list when searching. Use system Lookup View when empty or not found" of-type="SingleLine.Text" usage="input" required="false" />        
    <property name="lookupEntities" display-name-key="Lookup Entities" description-key="List entities with comma which will be searched when connecting current record. These entities must be connection enabled." of-type="SingleLine.Text" usage="input" required="true" />        
    <property name="allowQuickCreate" display-name-key="Allow Quick Create" description-key="Enable/disable the create button to quickly create a new option" of-type="Enum" usage="input" required="false" default-value="0" >
      <value name="false" display-name-key="No">0</value>
      <value name="true" display-name-key="Yes">1</value>
    </property>
    <property name="languagePackPath" display-name-key="Language Pack Path" description-key="Path to a resx web resource, relative to the environment url (eg. /webresources/new_/resx/PolyLookup.1033.resx), to be used as Language Pack. Default to English if not provided." of-type="SingleLine.Text" usage="input" required="false" />
    <!--
      Property node's of-type attribute can be of-type-group attribute.
      Example:
      <type-group name="numbers">
        <type>Whole.None</type>
        <type>Currency</type>
        <type>FP</type>
        <type>Decimal</type>
      </type-group>
      <property name="sampleProperty" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type-group="numbers" usage="bound" required="true" />
    -->
    <resources>
      <code path="index.ts" order="1"/>
      <!-- UNCOMMENT TO ADD MORE RESOURCES
      <css path="css/PolyLookup.css" order="1" />
      -->
      <resx path="strings/PolyLookupConnectionGrid.1033.resx" version="1.0.0" />
    </resources>
    <!-- UNCOMMENT TO ENABLE THE SPECIFIED API
    <feature-usage>
      <uses-feature name="Device.captureAudio" required="true" />
      <uses-feature name="Device.captureImage" required="true" />
      <uses-feature name="Device.captureVideo" required="true" />
      <uses-feature name="Device.getBarcodeValue" required="true" />
      <uses-feature name="Device.getCurrentPosition" required="true" />
      <uses-feature name="Device.pickFile" required="true" />
      <uses-feature name="Utility" required="true" />
      <uses-feature name="WebAPI" required="true" />
    </feature-usage>
    -->
  </control>
</manifest>
